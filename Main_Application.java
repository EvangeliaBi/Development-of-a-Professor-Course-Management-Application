package exetastiki_earino;			// Ορίζω το πακέτο που βρίσκεται μέσα στο project (Application Development) εντός του φακέλου src με σκοπό να οργανωθούν και να ομαδοποιηθούν καλύτερα οι κλάσεις(όλες οι κλάσεις που σχετίζονται με την εφαρμογή βρίσκονται σε αυτό το πακέτο) μέσα στον κώδικα καθιστώντας τον περισσότερο δομημένο και διαχειρίσιμο.

import java.awt.EventQueue;			// Εισάγεται κι εδώ η κλάση EventQueue από το πακέτο java.awt με σκοπό την σωστή σειρά ενεργειών για την διαχείριση κι εκτέλεση του κώδικα(για το γραφικό περιβάλλον του χρήστη) που έχει ως αποτέλεσμα την εφαρμογή του σωστού νήματος EDT(Event Dispatch Thread) για την επίτευξη ομαλής λειτουργίας των παραθύρων κατά την εκτέλεση της εφαρμογής.

	// Η εφαρμογή βασίζεται σε 2 ξεχωριστά στοιχεία που έχουν να κάνουν με την βάση δεδομένων(MySQL-Workbench) και τον κώδικα (Eclipse) με ξεχωριστή διατήρηση αυτών των 2 στοιχείων.
public class Main_Application {		// Φτιάχνω μία κλάση (η αρχική πύλη εκκίνησης της εφαρμογής) δημόσιας προσπέλασης (ορατή και από τις υπόλοιπες κλάσεις που τρέχουν τα παράθυρα κι επεκτείνουν την κλάση JFrame και βρίσκονται στο ίδιο πακέτο-package exetastiki earino), καθώς από εδώ θα ξεκινάει η εκτέλεση της εφαρμογής/του προγράμματος.
	
	// Σε αυτή την κλάση(κύρια κλάση) θα ξεκινάει η εκκίνηση του προγράμματος καθώς δημιουργείται από ένα public static πεδίο(όρατό το κάθε πεδίο και από τις κλάσεις που είναι τα παράθυρα κι επεκτείνουν την JFrame) για κάθε παράθυρο. Οι μεταβλητές αυτές/τα πεδία έχουν οριστεί ως στατικές μεταβλητές(public static), με αποτέλεσμα να είναι προσβάσιμες και χωρίς την δημιουργία αντικειμένου της κλάσης Main_Application και χρήση αυτών ως κεντρικά σημεία αναφοράς για όλη την εφαρμογή.
	public static IntroApplicationPlatform introapp;		// Πεδίο που αφορά το welcoming παράθυρο.
	public static Application startwin;						// Πεδίο που αφορά το control panel παράθυρο.
	public static Window_Search_Insert insert;				// Πεδίο που αφορά το παράθυρο αναζήτησης/εισαγωγής.
	public static New_Register register;					// Πεδίο που αφορά το παράθυρο για νέα εγγραφή καθηγητών.
	public static Results results;							// Πεδίο που αφορά το παράθυρο των αποτελεσμάτων.

	public static void main(String[] args) {	// Εντός της μεθόδου main(που ξεκινάει η εκτέλεση του προγράμματος), θα πραγματοποιείται η δημιουργία των νέων παραθύρων(ως αντικείμενα των αντίστοιχων κλάσεων) ενώ ταυτόχρονα θα πραγματοποιείται αρχικοποίηση των static πεδίων με αυτά τα αντικείμενα.
		EventQueue.invokeLater(new Runnable() {
		@Override
		public void run() {
			try {		 				// Μέσα στο try-block πραγματοποιείται η δημιουργία των νέων παραθύρων ως αντικείμενα των αντίστοιχων κλάεων και αυτό για να γίνει σωστή διαχείριση των εξαιρέσεων σε περίπτωση που προκύψουν και να μην καταρεύσει ολόκληρη η εφαρμογή.
				introapp = new IntroApplicationPlatform();	// Δημιουργία του νέου αντικειμένου ονόματι(introapp) μέσω της λέξης κλειδί new καλώντας τον κατασκευαστή IntroApplicationPlatform() της αντίστοιχης κλάσης-που επεκτείνει την JFrame-να εκτελεστεί κι εκχώρηση/ανάθεση του αντικειμένου στην στατική μεταβλητή introapp.
				introapp.setLocationByPlatform(true);		// Για το τρέχον αντικείμενο (introapp) καλείται η μέθοδος (setLocationByPlatform), η οποία ανήκει στο πακέτο java.awt.Window καθώς βάζοντας ως παράμετρο εισόδου μία boolean τιμή (δηλαδή την τιμή true) καθορίζεται τόσο από το λειτουργικό σύστημα όσο και από τον window manager η εμφάνιση του παραθύρου(κατά την πρώτη φορά που τρέχει όλη η εφαρμογή) εξασφαλίζοντας την by default αυτοματοποιημένη αρχική θέση του παραθύρου, αφού η ακριβής τοποθεσία καθορίζεται όταν το παράθυρο εμφανιστεί στην οθόνη του χρήστη. Με αυτόν τον τρόπο διασφαλίζεται ότι το παράθυρο δεν θα εμφανιστεί σε μή επιθυμητά σημεία ή εκτός οθόνης ακόμα κι όταν η εφαρμογή τρέχει σε διαφορετικά λειτουργικά συστήματα με διαφορετικές ρυθμίσεις, διότι υπάρχει αυτόματη τοποθέτηση του παραθύρου.
				introapp.setVisible(true);					// Αφού είναι το πρώτο παράθυρο(welcome window) που θα δει ο χρήστης γίνεται ορατό μέσω της μεθόδου setVisible(true) όταν ξεκινήσει να εκτελείται/να τρέχει η εφαρμογή.
				
				startwin = new Application();
				startwin.setLocationByPlatform(true);			// Αυτόματη τοποθεσία εμφάνισης του παραθύρου.
				startwin.setVisible(false);						// Το συγκεκριμένο παράθυρο είναι αόρατο (για αυτό και η μέθοδος setVisible έχει την τιμή false), που σημαίνει ότι δεν εμφανίζεται αμέσως στην οθόνη του χρήστη αλλά επρόκειτο να εμφανιστεί ύστερα από κάποια ενέργεια του χρήστη(πάτημα ενός κουμπιού) κι έτσι ο χρήστης θα μπορεί να δει το συγκεκριμένο παράθυρο, αφού θα αλλάξει η τιμή του setVisible από false σε true που σημαίνει ότι θα είναι ορατό και θα μπορεί να αλληλεπιδράσει με αυτό το παράθυρο. Μέσω της μεθόδου setVisible(false), αποφεύγεται η υπερφόρτωση της οθόνης και δίνεται έλεγχος στο πρόγραμμα για το ποιο παράθυρο θα ενεργοποιηθεί και πότε, δημιουργώντας έτσι μια δυναμική και φιλική προς τον χρήστη διεπαφή.
				
				insert = new Window_Search_Insert();
				insert.setLocationByPlatform(true);
				insert.setVisible(false);					// Προς το παρόν αόρατο το παράθυρο καθώς θα κληθεί να εμφανιστεί σύμφωνα και με την ροή της εφαρμογής και των αντίστοιχων ενεργειών/επιλογών που θα κάνει ο χρήστης ή κουμπιών που θα πατήσει.
				
				register = new New_Register();
				register.setLocationByPlatform(true);
				register.setVisible(false);					// Προς το παρόν αόρατο το παράθυρο καθώς θα κληθεί να εμφανιστεί σύμφωνα και με την ροή της εφαρμογής και των αντίστοιχων ενεργειών/επιλογών που θα κάνει ο χρήστης ή κουμπιών που θα πατήσει.
				
				results = new Results();
				results.setLocationByPlatform(true);
				results.setVisible(false);					// Προς το παρόν αόρατο το παράθυρο καθώς θα κληθεί να εμφανιστεί σύμφωνα και με την ροή της εφαρμογής και των αντίστοιχων ενεργειών/επιλογών που θα κάνει ο χρήστης ή κουμπιών που θα πατήσει.
				
			} catch(Exception e) {
				e.printStackTrace();
				}
			}
		});
	}
}
